---
- hosts: test_client
  become: yes
  become_method: sudo
  become_user: root
  gather_facts: false
  
  vars:
    user_username: "test_student"
    user_full_name: "Tes Student"
    student_group: "students"
    # Path on the CONTROL NODE to the known_hosts file you want to distribute    
    known_hosts_src: "~/.ssh/known_hosts"
    # Destination on the REMOTE machines (system-wide)
    known_hosts_dst_system: "/etc/ssh/ssh_known_hosts"
    # Optional: also place a copy in the user's home (commented tasks below)
    known_hosts_dst_user: ".ssh/known_hosts"

  pre_tasks:
    - name: Check that the source known_hosts exists on the control node
      delegate_to: localhost
      run_once: true
      stat:
        path: "{{ known_hosts_src | expanduser }}"
      register: known_hosts_src_stat

    - name: Fail early if known_hosts source is missing
      delegate_to: localhost
      run_once: true
      fail:
        msg: >-
          The known_hosts source file {{ known_hosts_src | expanduser }} was not found
          on the control node. Provide it via -e known_hosts_src=... or create it.
      when: not known_hosts_src_stat.stat.exists

  tasks:
    - name: Check sudo access
      command: whoami
      register: whoami_result
      
    - name: Display current user
      debug:
        var: whoami_result.stdout

    - name: Ensure student admin group exists (create if missing)
      group:
        name: "{{ student_group }}"
        state: present
      become: yes

    - name: Ensure user exists with full name, bash shell, and is in student group
      user:
        name: "{{ user_username }}"
        comment: "{{ user_full_name }}"
        groups: "{{ student_group }}"
        shell: /bin/bash  # Explicitly set bash shell
        append: true
        create_home: true
        state: present
      become: yes

    - name: Ensure system-wide SSH directory exists
      file:
        path: "{{ known_hosts_dst_system | dirname }}"
        state: directory
        mode: "0755"
      become: yes

    - name: Copy known_hosts to system-wide location on remote
      copy:
        src: "{{ known_hosts_src | expanduser }}"
        dest: "{{ known_hosts_dst_system }}"
        owner: root
        group: root
        mode: "0644"
      become: yes

    - name: Ensure user's .ssh directory exists
      file:
        path: "/home/{{ user_username }}/.ssh"
        state: directory
        owner: "{{ user_username }}"
        group: "{{ user_username }}"
        mode: "0700"
      become: yes
    
    - name: Copy known_hosts to user's home
      copy:
        src: "{{ known_hosts_src | expanduser }}"
        dest: "/home/{{ user_username }}/{{ known_hosts_dst_user }}"
        owner: "{{ user_username }}"
        group: "{{ user_username }}"
        mode: "0644"
      become: yes
