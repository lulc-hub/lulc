---
- name: Delete multiple users from CSV file
  hosts: all
  become: yes
  become_method: sudo
  become_user: root
  gather_facts: false

  vars:
    # Override via -e "csv_path=/path/to/users.csv"
    csv_path: "./newusers.csv"
    
    # Optional: Remove home directories (default: true)
    remove_home_dirs: true

  pre_tasks:
    - name: Check the CSV exists on the control node
      delegate_to: localhost
      run_once: true
      stat:
        path: "{{ csv_path | expanduser }}"
      register: csv_stat

    - name: Fail if CSV not found
      delegate_to: localhost
      run_once: true
      fail:
        msg: "CSV not found at {{ csv_path | expanduser }} on the control node."
      when: not csv_stat.stat.exists

    - name: Read users from CSV (requires community.general)
      delegate_to: localhost
      run_once: true
      community.general.read_csv:
        path: "{{ csv_path | expanduser }}"
      register: users_csv

    - name: Display users that will be deleted
      debug:
        msg: "Users to delete: {{ users_csv.list | map(attribute='username') | list }}"
      run_once: true

  tasks:
    - name: Check which users exist on the system
      command: "id {{ item.username }}"
      register: user_existence
      ignore_errors: yes
      changed_when: false
      loop: "{{ users_csv.list }}"
      loop_control:
        label: "{{ item.username }}"

    - name: Delete users that exist
      user:
        name: "{{ item.item.username }}"
        state: absent
        remove: "{{ remove_home_dirs }}"
        force: "{{ remove_home_dirs }}"
      loop: "{{ user_existence.results }}"
      loop_control:
        label: "{{ item.item.username }}"
      when: item.rc == 0

    - name: Display skipped users (non-existent)
      debug:
        msg: "User '{{ item.item.username }}' does not exist (skipped)"
      loop: "{{ user_existence.results }}"
      loop_control:
        label: "{{ item.item.username }}"
      when: item.rc != 0

    - name: Force kill any processes owned by deleted users
      shell: "pkill -u {{ item.username }} || true"
      loop: "{{ users_csv.list }}"
      ignore_errors: yes
      changed_when: false

    - name: Force remove home directories if still exist
      file:
        path: "/home/{{ item.username }}"
        state: absent
      loop: "{{ users_csv.list }}"
      when: remove_home_dirs

    - name: Verify users have been deleted
      command: "id {{ item.username }}"
      register: deletion_verification
      ignore_errors: yes
      changed_when: false
      loop: "{{ users_csv.list }}"
      loop_control:
        label: "{{ item.username }}"

    - name: Display deletion results
      debug:
        msg: "User '{{ item.item.username }}' successfully deleted"
      loop: "{{ deletion_verification.results }}"
      when: item.rc != 0

    - name: Summary report
      debug:
        msg: |
          Deletion process completed.
          Total users in CSV: {{ users_csv.list | length }}
          Home directories removed: {{ remove_home_dirs | bool | string }}
      run_once: true
