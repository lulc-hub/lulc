---
- name: Sync latest passwords for all users across all machines
  hosts: lu_1
  become: yes
  become_method: sudo
  become_user: root

  tasks:
    - name: Check if at least two hosts exist in inventory
      fail:
        msg: "At least two hosts are required in the inventory to sync passwords"
      when: groups['lu_1'] | length < 2
      run_once: true

    - name: Debug available hosts
      debug:
        msg: "Available hosts: {{ groups['lu_1'] | list }}"
      when: debug_mode | default(false)
      run_once: true

    - name: Verify shadow file exists and is accessible
      ansible.builtin.file:
        path: /etc/shadow
        state: file
      register: shadow_stat
      failed_when: not shadow_stat.stat.exists or not shadow_stat.stat.readable

    - name: Debug shadow file status
      debug:
        msg: "Shadow file exists: {{ shadow_stat.stat.exists }}, readable: {{ shadow_stat.stat.readable }}"
      when: debug_mode | default(false)

    - name: Get local shadow file entries
      command: "cat /etc/shadow"
      register: local_shadow
      changed_when: false
      no_log: true

    - name: Parse local users and last change dates
      set_fact:
        local_users: "{{ local_shadow.stdout_lines | select('match', '^[^:]+:[^:]*:[0-9]+:') | map('regex_replace', '^([^:]+):[^:]*:([0-9]+):.*$', '\\1:\\2') | list }}"
      no_log: true

    - name: Debug local_users
      debug:
        msg: "{{ local_users }}"
      when: debug_mode | default(false)

    - name: Gather shadow entries from all hosts
      command: "cat /etc/shadow"
      register: all_shadows
      delegate_to: "{{ item }}"
      loop: "{{ groups['lu_1'] }}"
      changed_when: false
      no_log: true

    - name: Parse all users and last change dates from all hosts
      set_fact:
        all_users: "{{ all_shadows.results | map(attribute='item') | zip(all_shadows.results | map(attribute='stdout_lines') | map('select', 'match', '^[^:]+:[^:]*:[0-9]+:') | map('map', 'regex_replace', '^([^:]+):[^:]*:([0-9]+):.*$', '\\1:\\2') | dict }}"
      no_log: true

    - name: Debug all_users
      debug:
        msg: "{{ all_users }}"
      when: debug_mode | default(false)

    - name: Determine latest password changes for each user
      set_fact:
        latest_changes: "{{ latest_changes | default({}) | combine({item.key: {'host': item.value[0], 'lastchange': item.value[1] | int} }) }}"
      loop: "{{ all_users | dict2items | map('combine', {'value': {'0': item.value[0], '1': (all_users | dict2items | selectattr('key', 'equalto', item.key) | map(attribute='value') | map('map', 'split', ':') | map('last') | map('int') | max)}}) | list }}"
      no_log: true

    - name: Fetch shadow entries for users with newer passwords
      command: "grep ^{{ item.key }}: /etc/shadow"
      register: source_shadow
      delegate_to: "{{ item.value.host }}"
      loop: "{{ latest_changes | dict2items }}"
      when: "{{ local_users | select('match', '^' + item.key + ':') | map('split', ':') | map('last') | map('int') | first | default(0) < item.value.lastchange and item.value.host != inventory_hostname }}"
      no_log: true

    - name: Update shadow entries for users with newer passwords
      lineinfile:
        path: /etc/shadow
        regexp: "^{{ item.item.key }}:"
        line: "{{ item.stdout }}"
        owner: root
        group: shadow
        mode: '0640'
        backup: yes
      loop: "{{ source_shadow.results | select('skipped', 'undefined') }}"
      when: "{{ item.skipped is not defined }}"
      no_log: true
