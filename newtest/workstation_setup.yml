---
- name: Workstation setup (TeamViewer, SSH, dev tools, Python packages)
  hosts: lab1
  become: yes
  become_method: sudo
  become_user: root
  gather_facts: true

  vars:
    teamviewer_deb_url: "https://download.teamviewer.com/download/linux/teamviewer_amd64.deb"
    teamviewer_deb_path: "/tmp/teamviewer_amd64.deb"
    base_packages:
      - gcc
      - gnat
      - git
      - default-jre
      - default-jdk
      - erlang
      - nodejs
      - make
      - r-base
      - r-cran-rstudioapi
      - flex
      - bison
      - sqlite3
      - sqlite3-tools
      - openjdk-17-jdk-headless
      - xterm
      - scrypt
      - screen
      - build-essential
      - libssl-dev
      - zlib1g-dev
      - libbz2-dev
      - libreadline-dev
      - libsqlite3-dev
      - wget
      - curl
      - llvm
      - libncurses5-dev
      - libncursesw5-dev
      - xz-utils
      - tk-dev
      - libffi-dev
      - liblzma-dev
      - code
      - python3
      - libpng-dev
      - libfreetype6-dev
      - libblas-dev
      - liblapack-dev
    python_apt_packages_to_remove:
      - python3-pip
      - python3-traitlets
      - python3-jupyter-client
      - python3-jupyter-core
      - python3-nbformat
      - python3-nbclient
      - python3-nbconvert
      - python3-ipykernel
      - python3-pandas
      - python3-matplotlib
      - python3-scipy
      - python3-numpy
      - python3-fastjsonschema
      - python3-pyparsing
    python_packages:
      - numpy
      - scikit-learn
      - scipy
      - matplotlib
      - pycryptodomex
      - cryptography
      - pytest
      - pandas
      - notebook
      - spyder

  tasks:
    - name: Add Microsoft GPG key
      ansible.builtin.apt_key:
        url: https://packages.microsoft.com/keys/microsoft.asc
        state: present

    - name: Add VS Code repository
      ansible.builtin.apt_repository:
        repo: deb [arch=amd64] https://packages.microsoft.com/repos/code stable main
        state: present
        filename: vscode

    - name: Update apt cache and upgrade packages
      ansible.builtin.apt:
        update_cache: true
        upgrade: dist
        cache_valid_time: 3600

    - name: Install python3
      ansible.builtin.apt:
        name: python3
        state: present
        update_cache: true
      register: python_install
      retries: 3
      delay: 5
      until: python_install is succeeded

    - name: Check PyPI connectivity
      ansible.builtin.command: curl -s -o /dev/null -w "%{http_code}" https://pypi.org
      register: pypi_check
      changed_when: false
      failed_when: pypi_check.stdout != "200"
      retries: 3
      delay: 5
      until: pypi_check is succeeded

    - name: Check system resources (disk space)
      ansible.builtin.command: df -h /
      register: disk_space
      changed_when: false
      failed_when: false

    - name: Debug disk space
      ansible.builtin.debug:
        msg: "{{ disk_space.stdout_lines }}"
      when: disk_space.stdout is defined

    - name: Remove conflicting apt-installed Python packages
      ansible.builtin.apt:
        name: "{{ python_apt_packages_to_remove }}"
        state: absent
        purge: true
      register: apt_remove
      retries: 3
      delay: 5
      until: apt_remove is succeeded

    - name: Debug apt removal failure
      ansible.builtin.debug:
        msg: "Failed to remove apt packages: {{ apt_remove.stderr }}"
      when: apt_remove is failed

    - name: Install pip manually using get-pip.py
      ansible.builtin.shell: curl -sS https://bootstrap.pypa.io/get-pip.py | python3
      args:
        creates: /usr/local/bin/pip3
      environment:
        PIP_BREAK_SYSTEM_PACKAGES: "1"
      register: pip_install
      retries: 3
      delay: 5
      until: pip_install is succeeded

    - name: Ensure pip3 is executable
      ansible.builtin.file:
        path: /usr/local/bin/pip3
        mode: "0755"
      when: pip_install is succeeded

    - name: Upgrade pip to latest version
      ansible.builtin.pip:
        name: pip
        state: latest
        executable: /usr/local/bin/pip3
        extra_args: "--force-reinstall"
      environment:
        PIP_BREAK_SYSTEM_PACKAGES: "1"
      register: pip_upgrade
      retries: 5
      delay: 10
      until: pip_upgrade is succeeded

    - name: Debug pip upgrade failure
      ansible.builtin.debug:
        msg: "Pip upgrade failed with output: {{ pip_upgrade.stderr }}"
      when: pip_upgrade is failed

    - name: Ensure python3-fastjsonschema is absent before pip install
      ansible.builtin.apt:
        name: python3-fastjsonschema
        state: absent
        purge: true
      register: fastjsonschema_remove
      retries: 3
      delay: 5
      until: fastjsonschema_remove is succeeded

    - name: Install Python packages system-wide
      ansible.builtin.pip:
        name: "{{ item }}"
        state: present
        executable: /usr/local/bin/pip3
        extra_args: "--force-reinstall"
      environment:
        PIP_BREAK_SYSTEM_PACKAGES: "1"
      loop: "{{ python_packages }}"
      register: pip_install_python
      retries: 5
      delay: 10
      until: pip_install_python is succeeded

    - name: Debug pip installation failure
      ansible.builtin.debug:
        msg: "Pip installation failed for {{ item }} with output: {{ pip_install_python.results | select('failed') | map(attribute='msg') | list }}"
      when: pip_install_python is failed

    - name: Install general development/runtime packages
      ansible.builtin.apt:
        name: "{{ base_packages }}"
        state: present

    - name: Ensure python3-fastjsonschema is absent after apt packages
      ansible.builtin.apt:
        name: python3-fastjsonschema
        state: absent
        purge: true
      register: fastjsonschema_remove_post_apt
      retries: 3
      delay: 5
      until: fastjsonschema_remove_post_apt is succeeded

    - name: Download TeamViewer .deb
      ansible.builtin.get_url:
        url: "{{ teamviewer_deb_url }}"
        dest: "{{ teamviewer_deb_path }}"
        mode: "0644"

    - name: Install TeamViewer from .deb
      ansible.builtin.apt:
        deb: "{{ teamviewer_deb_path }}"
        state: present
        update_cache: true

    - name: Ensure OpenSSH server is installed
      ansible.builtin.apt:
        name: openssh-server
        state: present

    - name: Enable and start SSH service
      ansible.builtin.service:
        name: ssh
        state: started
        enabled: true

    # ---------------- Docker CE repo setup (ASC key) ----------------
    - name: Install Docker prerequisites
      ansible.builtin.apt:
        name:
          - ca-certificates
          - curl
        state: present
        update_cache: true

    - name: Ensure /etc/apt/keyrings exists
      ansible.builtin.file:
        path: /etc/apt/keyrings
        state: directory
        mode: "0755"

    - name: Remove legacy Docker GPG key (if present)
      ansible.builtin.file:
        path: /etc/apt/keyrings/docker.gpg
        state: absent

    - name: Remove legacy docker.list if it references docker.gpg
      ansible.builtin.lineinfile:
        path: /etc/apt/sources.list.d/docker.list
        state: absent
        regexp: '^deb\s.*docker.*gpg.*$'
      when: ansible_facts['distribution'] == 'Ubuntu'
      ignore_errors: true

    - name: Download Docker repository ASC key
      ansible.builtin.get_url:
        url: https://download.docker.com/linux/ubuntu/gpg
        dest: /etc/apt/keyrings/docker.asc
        mode: "0644"
      register: docker_key
      retries: 3
      delay: 5
      until: docker_key is succeeded

    - name: Compute dpkg architecture for Docker repo
      ansible.builtin.set_fact:
        dpkg_arch: >-
          {{
            'arm64' if ansible_architecture in ['aarch64','arm64']
            else 'amd64' if ansible_architecture in ['x86_64','amd64']
            else ansible_architecture
          }}

    - name: Add Docker APT repository (uses ASC key)
      ansible.builtin.apt_repository:
        repo: >-
          deb [arch={{ dpkg_arch }} signed-by=/etc/apt/keyrings/docker.asc]
          https://download.docker.com/linux/ubuntu
          {{ ansible_distribution_release | lower }} stable
        filename: docker
        state: present

    - name: Update apt cache (after adding Docker repo)
      ansible.builtin.apt:
        update_cache: true

    - name: Install Docker CE and related components
      ansible.builtin.apt:
        name:
          - docker-ce
          - docker-ce-cli
          - containerd.io
          - docker-buildx-plugin
          - docker-compose-plugin
        state: present

    - name: Ensure docker group exists
      ansible.builtin.group:
        name: docker
        state: present
