---
- name: Install pyenv and configure Python versions without sudo
  hosts: lab1
  gather_facts: false
  vars:
    pyenv_user: "{{ ansible_user | default('ansible') }}"
    pyenv_root: "/home/{{ pyenv_user }}/.pyenv"
    python_versions:
      - "3.8"
      - "3.11"

  tasks:
    - name: Check if pyenv is already installed
      ansible.builtin.stat:
        path: "{{ pyenv_root }}/bin/pyenv"
      register: pyenv_installed

    - name: Download and install pyenv
      ansible.builtin.shell: curl https://pyenv.run | bash
      args:
        creates: "{{ pyenv_root }}/bin/pyenv"
      when: not pyenv_installed.stat.exists

    - name: Ensure pyenv directory permissions
      ansible.builtin.file:
        path: "{{ pyenv_root }}"
        state: directory
        owner: "{{ pyenv_user }}"
        group: "{{ pyenv_user }}"
        mode: "0755"
      when: not pyenv_installed.stat.exists

    - name: Add pyenv to .bashrc
      ansible.builtin.blockinfile:
        path: "/home/{{ pyenv_user }}/.bashrc"
        marker: "# {mark} ANSIBLE MANAGED BLOCK for pyenv"
        block: |
          export PYENV_ROOT="$HOME/.pyenv"
          command -v pyenv >/dev/null || export PATH="$PYENV_ROOT/bin:$PATH"
          eval "$(pyenv init -)"
          eval "$(pyenv virtualenv-init -)"
        state: present

    - name: Install specified Python versions
      ansible.builtin.shell: "{{ pyenv_root }}/bin/pyenv install -v {{ item }}"
      args:
        creates: "{{ pyenv_root }}/versions/{{ item }}/bin/python"
      loop: "{{ python_versions }}"
      environment:
        PYENV_ROOT: "{{ pyenv_root }}"
        PATH: "{{ pyenv_root }}/bin:{{ ansible_env.PATH }}"
